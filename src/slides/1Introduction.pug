section(
  data-menu-title="Introduction"
)
 section(data-timing=30)
  h1 Anatomy of Rx
  aside.notes
    p Hello! Today I'd like to talk about Observables and RxJS
    p Here, I'll try to help you intuitively understand how RxJS works so you'll feel more comfortable using it

 section(data-timing=30)
  h2 Why?
  ul
    li .map and .subscribe are fun!
    li.fragment reading this is not fun:
      code.hljs.smaller.
        Maps each source value to the given Observable innerObservable regardless of the source value, and then flattens those resulting Observables into one single Observable, which is the output Observable.

        The output Observables emits values only from the most recently emitted instance of innerObservable.

        #[.right.small Â© .switchMapTo API documentation]

  aside.notes
    p I think it's hard to fully utilize Rx without knowledge of how it works internally
    p Yeah, it's all fine when you're just mapping and subscribing
    p 2. But if you'll ever need to step aside from simple logic or dare to go to documentation
    p it could be quite difficult to handle all of Rx's power

 section(data-timing=30)
  h2 The plan
  ul.big
    li Overview
    li Rx.Observable structure and flow
    li Dispel some magic
  aside.notes
    p So, here's what we're going to do
    p We're going to have a short overview of what is Observable and RxJS to make sure everyone is on the same page.
    p Next we'll look how Rx.Observable looks like in the source code
    p And based on this I'll try to explain some non-obvious behavior examples
    p Let's go: